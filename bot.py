import asyncio
import re
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from config import BOT_TOKEN, MAX_DOWNLOADS_PER_USER
from utils import detect_platform, download_video, get_user_locale, cleanup_message_later

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher()

user_downloads = {}

keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üîÅ –°–∫–∞—á–∞—Ç–∏ —â–µ", callback_data="download_more")]
    ]
)

warning_texts = {
    "uk": "‚ö†Ô∏è <b>–£–≤–∞–≥–∞:</b> –≤—ñ–¥–µ–æ –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 5 —Ö–≤–∏–ª–∏–Ω.\n"
          "–ó–±–µ—Ä–µ–∂—ñ—Ç—å –π–æ–≥–æ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å.",
    "pl": "‚ö†Ô∏è <b>Uwaga:</b> film zostanie automatycznie usuniƒôty za 5 minut.\n"
          "Pobierz go wcze≈õniej."
}


@dp.message(CommandStart())
async def start(message: Message):
    locale = get_user_locale(message)
    text = {
        "uk": "üëã –í—ñ—Ç–∞—é! –ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ TikTok, Instagram –∞–±–æ YouTube.",
        "pl": "üëã Cze≈õƒá! Wy≈õlij link do filmu z TikToka, Instagrama lub YouTube."
    }.get(locale, "üëã Send me a video link.")
    await message.answer(text)


@dp.message(F.text.regexp(r'(https?://\S+)'))
async def handle_video_request(message: Message):
    user_id = message.from_user.id
    locale = get_user_locale(message)

    if user_downloads.get(user_id, 0) >= MAX_DOWNLOADS_PER_USER:
        text = {
            "uk": "üö´ –í–∏ –¥–æ—Å—è–≥–ª–∏ –ª—ñ–º—ñ—Ç—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å.",
            "pl": "üö´ OsiƒÖgniƒôto limit pobierania."
        }.get(locale, "üö´ Download limit reached.")
        await message.reply(text)
        return

    url_match = re.search(r'(https?://\S+)', message.text)
    if not url_match:
        return

    url = url_match.group(1)
    platform = detect_platform(url)

    if platform:
        await message.answer("‚è¨ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –≤—ñ–¥–µ–æ...")
        try:
            video_path = await download_video(url, platform)
            sent = await message.answer_video(
                video=open(video_path, "rb"),
                reply_markup=keyboard
            )
            await message.answer(warning_texts.get(locale))
            user_downloads[user_id] = user_downloads.get(user_id, 0) + 1
            await cleanup_message_later(sent.chat.id, sent.message_id, 300)
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ: {e}")
            await message.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ.")
    else:
        await message.reply("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –∞–±–æ –Ω–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞.")


@dp.callback_query(F.data == "download_more")
async def handle_repeat(callback_query):
    locale = get_user_locale(callback_query)
    text = {
        "uk": "üîÅ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.",
        "pl": "üîÅ Wy≈õlij nowy link do pobrania."
    }.get(locale)
    await callback_query.message.answer(text)
